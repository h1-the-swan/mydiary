version: '3'
services:
  backend:
    build: ./backend
    volumes:
      - ./backend/mydiary:/usr/local/src/app/backend/mydiary
      - ./backend/poetry.lock:/usr/local/src/app/backend/poetry.lock
      - ./backend/pyproject.toml:/usr/local/src/app/backend/pyproject.toml
      - ./backend/token_cache:/usr/local/src/app/backend/token_cache
      - ./backend/tests:/usr/local/src/app/backend/tests
      - ./backend/pytest.ini:/usr/local/src/app/backend/pytest.ini
      # specify joplin data as a persistent docker volume (defined below)
      - joplin_data:/root/.config/joplin
      # use timezone information from host machine
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - ./backend/.env
    environment:
      # This ensures that errors are printed as they occur, which
      # makes debugging easier.
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=DEBUG
      - DEV_MODE=1
      # override these variables from the .env file:
      - SPOTIFY_TOKEN_CACHE_PATH=/usr/local/src/app/backend/token_cache/spotify.json
      - GOOGLECALENDAR_TOKEN_CACHE=/usr/local/src/app/backend/token_cache/googlecalendar_token.json
      - GOOGLEPHOTOS_TOKEN_CACHE=/usr/local/src/app/backend/token_cache/googlephotos_token.json
    # command: ["main:app", "--host", "0.0.0.0", "--reload"]
    # ports:
    #     - 8888:8888
  frontend:
    build: ./frontend
    # We can't mount the entire UI directory, since JavaScript dependencies
    # (`node_modules`) live at that location.
    volumes:
      - ./frontend/src:/usr/local/src/app/frontend/src
      - ./frontend/public:/usr/local/src/app/frontend/public
      - ./frontend/build:/usr/local/src/app/frontend/build
      - ./frontend/package.json:/usr/local/src/app/frontend/package.json
      - ./frontend/tsconfig.json:/usr/local/src/app/frontend/tsconfig.json
      - ./frontend/yarn.lock:/usr/local/src/app/frontend/yarn.lock
      # use timezone information from host machine
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - NODE_ENV=development
    # ports:
    #     - 3000:3000
    depends_on:
      - backend
  proxy:
    image: nginx:1.17
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 8080:80
    depends_on:
      - backend
      - frontend

volumes:
  joplin_data: