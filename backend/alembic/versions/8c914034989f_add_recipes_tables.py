"""add recipes tables

Revision ID: 8c914034989f
Revises: 986f1649293c
Create Date: 2022-05-01 10:52:22.855991

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '8c914034989f'
down_revision = '986f1649293c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('recipe',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('upvotes', sa.Integer(), nullable=True),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipe_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_recipe_upvotes'), ['upvotes'], unique=False)

    op.create_table('recipeevent',
    sa.Column('id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.Integer(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('recipe_id', 'timestamp', name='uix_recipe_timestamp')
    )
    with op.batch_alter_table('recipeevent', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_recipeevent_recipe_id'), ['recipe_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_recipeevent_timestamp'), ['timestamp'], unique=False)

    op.create_table('recipetaglink',
    sa.Column('recipe_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['recipe_id'], ['recipe.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('recipe_id', 'tag_id')
    )
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.add_column(sa.Column('how_met', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(sa.Column('when_met', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('owners', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
        batch_op.add_column(sa.Column('estimated_bday', sa.DateTime(), nullable=True))
        batch_op.create_index(batch_op.f('ix_dog_estimated_bday'), ['estimated_bday'], unique=False)
        batch_op.create_index(batch_op.f('ix_dog_how_met'), ['how_met'], unique=False)
        batch_op.create_index(batch_op.f('ix_dog_when_met'), ['when_met'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dog_when_met'))
        batch_op.drop_index(batch_op.f('ix_dog_how_met'))
        batch_op.drop_index(batch_op.f('ix_dog_estimated_bday'))
        batch_op.drop_column('estimated_bday')
        batch_op.drop_column('owners')
        batch_op.drop_column('when_met')
        batch_op.drop_column('how_met')

    op.drop_table('recipetaglink')
    with op.batch_alter_table('recipeevent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipeevent_timestamp'))
        batch_op.drop_index(batch_op.f('ix_recipeevent_recipe_id'))

    op.drop_table('recipeevent')
    with op.batch_alter_table('recipe', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_recipe_upvotes'))
        batch_op.drop_index(batch_op.f('ix_recipe_name'))

    op.drop_table('recipe')
    # ### end Alembic commands ###
