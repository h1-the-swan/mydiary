"""add link table between joplin notes and images

Revision ID: de39eddb61af
Revises: a2ba3ac2978e
Create Date: 2024-12-30 23:35:42.118371

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = 'de39eddb61af'
down_revision: Union[str, None] = 'a2ba3ac2978e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('joplinnoteimagelink',
    sa.Column('joplin_note_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('mydiary_image_id', sa.Integer(), nullable=False),
    sa.Column('sequence_num', sa.Integer(), nullable=False),
    sa.Column('note_title', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['joplin_note_id'], ['joplinnote.id'], ),
    sa.ForeignKeyConstraint(['mydiary_image_id'], ['mydiaryimage.id'], ),
    sa.PrimaryKeyConstraint('joplin_note_id', 'mydiary_image_id', 'sequence_num')
    )
    with op.batch_alter_table('joplinnoteimagelink', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_joplinnoteimagelink_note_title'), ['note_title'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('joplinnoteimagelink', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_joplinnoteimagelink_note_title'))

    op.drop_table('joplinnoteimagelink')
    # ### end Alembic commands ###
