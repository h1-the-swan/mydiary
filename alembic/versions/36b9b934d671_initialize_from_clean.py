"""initialize from clean

Revision ID: 36b9b934d671
Revises: 
Create Date: 2022-02-06 17:08:32.211608

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '36b9b934d671'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dog',
    sa.Column('uid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dog_name'), ['name'], unique=False)

    op.create_table('googlecalendarevent',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('start_timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('googlecalendarevent', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_end'), ['end'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_start'), ['start'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_summary'), ['summary'], unique=False)

    op.create_table('pocketarticle',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('given_title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resolved_title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('favorite', sa.Boolean(), nullable=False),
    sa.Column('status', sa.Integer(), nullable=False),
    sa.Column('time_added', sa.DateTime(), nullable=True),
    sa.Column('time_updated', sa.DateTime(), nullable=True),
    sa.Column('time_read', sa.DateTime(), nullable=True),
    sa.Column('time_favorited', sa.DateTime(), nullable=True),
    sa.Column('listen_duration_estimate', sa.Integer(), nullable=True),
    sa.Column('word_count', sa.Integer(), nullable=True),
    sa.Column('excerpt', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('top_image_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pocketarticle', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pocketarticle_favorite'), ['favorite'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_given_title'), ['given_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_listen_duration_estimate'), ['listen_duration_estimate'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_resolved_title'), ['resolved_title'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_time_added'), ['time_added'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_time_favorited'), ['time_favorited'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_time_read'), ['time_read'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_time_updated'), ['time_updated'], unique=False)
        batch_op.create_index(batch_op.f('ix_pocketarticle_word_count'), ['word_count'], unique=False)

    op.create_table('spotifytrackhistory',
    sa.Column('spotify_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('artist_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uri', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('played_at', sa.DateTime(), nullable=False),
    sa.Column('context_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('context_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('spotify_id', 'played_at', name='uix_track_datetime')
    )
    with op.batch_alter_table('spotifytrackhistory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_artist_name'), ['artist_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_spotify_id'), ['spotify_id'], unique=False)

    op.create_table('tag',
    sa.Column('uid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tag_name'), ['name'], unique=False)

    op.create_table('pocketarticletaglink',
    sa.Column('article_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tag_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.ForeignKeyConstraint(['article_id'], ['pocketarticle.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.uid'], ),
    sa.PrimaryKeyConstraint('article_id', 'tag_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pocketarticletaglink')
    with op.batch_alter_table('tag', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tag_name'))

    op.drop_table('tag')
    with op.batch_alter_table('spotifytrackhistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_spotify_id'))
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_name'))
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_artist_name'))

    op.drop_table('spotifytrackhistory')
    with op.batch_alter_table('pocketarticle', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pocketarticle_word_count'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_time_updated'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_time_read'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_time_favorited'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_time_added'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_resolved_title'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_listen_duration_estimate'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_given_title'))
        batch_op.drop_index(batch_op.f('ix_pocketarticle_favorite'))

    op.drop_table('pocketarticle')
    with op.batch_alter_table('googlecalendarevent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_summary'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_start'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_location'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_end'))

    op.drop_table('googlecalendarevent')
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dog_name'))

    op.drop_table('dog')
    # ### end Alembic commands ###
