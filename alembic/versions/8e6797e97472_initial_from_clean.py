"""initial from clean

Revision ID: 8e6797e97472
Revises: 
Create Date: 2022-02-05 17:32:40.384016

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '8e6797e97472'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dog',
    sa.Column('uid', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uid')
    )
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_dog_name'), ['name'], unique=False)

    op.create_table('googlecalendarevent',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('summary', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start', sa.DateTime(), nullable=False),
    sa.Column('end', sa.DateTime(), nullable=False),
    sa.Column('start_timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('end_timezone', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('new_test_col', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('googlecalendarevent', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_end'), ['end'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_location'), ['location'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_start'), ['start'], unique=False)
        batch_op.create_index(batch_op.f('ix_googlecalendarevent_summary'), ['summary'], unique=False)

    op.create_table('spotifytrackhistory',
    sa.Column('spotify_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('artist_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('uri', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('played_at', sa.DateTime(), nullable=False),
    sa.Column('context_type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('context_uri', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('spotify_id', 'played_at', name='uix_track_datetime')
    )
    with op.batch_alter_table('spotifytrackhistory', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_artist_name'), ['artist_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_spotifytrackhistory_spotify_id'), ['spotify_id'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('spotifytrackhistory', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_spotify_id'))
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_name'))
        batch_op.drop_index(batch_op.f('ix_spotifytrackhistory_artist_name'))

    op.drop_table('spotifytrackhistory')
    with op.batch_alter_table('googlecalendarevent', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_summary'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_start'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_location'))
        batch_op.drop_index(batch_op.f('ix_googlecalendarevent_end'))

    op.drop_table('googlecalendarevent')
    with op.batch_alter_table('dog', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dog_name'))

    op.drop_table('dog')
    # ### end Alembic commands ###
